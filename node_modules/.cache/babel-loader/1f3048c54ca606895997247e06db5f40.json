{"ast":null,"code":"var _jsxFileName = \"/home/diego/\\xC1rea de Trabalho/react tutorial/jogo-da-velha/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }, this);\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        square: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this);\n  }\n\n} // ========================================\n//Declarando um vencedor\n\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 138,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/home/diego/Área de Trabalho/react tutorial/jogo-da-velha/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","handleClick","i","squares","state","slice","calculateWinner","xIsNext","setState","renderSquare","render","winner","status","Game","constructor","history","square","Array","fill","lines","length","a","b","c","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n\n  \n    function Square(props) {\n        return (\n            <button className=\"square\" onClick={props.onClick}>\n                {props.value}\n            </button>\n        );\n    }\n  \n\n  \n  class Board extends React.Component {\n\n\n\n    handleClick(i){\n        const squares = this.state.squares.slice();\n\n        if (calculateWinner(squares) || squares[i] ){\n            return;\n        }\n\n        squares [i] = this.state.xIsNext ? \"X\" : \"O\";\n\n        this.setState({\n            squares: squares,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    renderSquare(i) {\n      return <Square \n        value={this.props.squares[i]}\n        onClick ={()=> this.props.onClick(i)} \n      />;\n    }\n  \n    render() {\n\n        \n      const winner = calculateWinner(this.state.squares);\n      let status;\n\n      if (winner){\n        status = \"Winner: \" + winner;  \n      }\n      else {\n          status = \"Next player: \" + (this.state.xIsNext ? 'X' : 'O')\n      }\n  \n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n\n    constructor(props) {\n        super (props);\n\n        this.state = {\n\n            history: [{\n                square: Array(9).fill(null),\n            }],\n            xIsNext: true,\n        };\n\n    }\n\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n\n  //Declarando um vencedor\n\n    function calculateWinner (squares){\n        const lines =[\n            [0,1,2],\n            [3,4,5],\n            [6,7,8],\n            [0,3,6],\n            [1,4,7],\n            [2,5,8],\n            [0,4,8],\n            [2,4,6],\n        ];\n\n        for (let i = 0; i<lines.length; i++){\n            const [a,b,c] = lines [i];\n\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n                return squares[a];\n            }\n        }\n        \n        return null;\n    }\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "]},"metadata":{},"sourceType":"module"}